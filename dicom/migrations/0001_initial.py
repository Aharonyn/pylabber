# Generated by Django 2.1.2 on 2018-10-30 13:18

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('research', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Instance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instance_uid', models.CharField(blank=True, max_length=64, unique=True, validators=[django.core.validators.RegexValidator('^\\d+(\\.\\d+)*$', code='invalid_uid', message='Digits and dots only!')])),
                ('file', models.FileField(blank=True, upload_to='dicom')),
                ('number', models.IntegerField(blank=True, null=True, verbose_name='Instance Number')),
                ('date', models.DateField(blank=True, null=True)),
                ('time', models.TimeField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_uid', models.CharField(max_length=64, unique=True, validators=[django.core.validators.RegexValidator('^\\d+$', code='invalid_patient_uid', message='Digits only!')])),
                ('given_name', models.CharField(blank=True, max_length=64)),
                ('family_name', models.CharField(blank=True, max_length=64)),
                ('middle_name', models.CharField(blank=True, max_length=64)),
                ('name_prefix', models.CharField(blank=True, max_length=64)),
                ('name_suffix', models.CharField(blank=True, max_length=64)),
                ('date_of_birth', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sex', models.CharField(blank=True, choices=[('MALE', 'Male'), ('FEMALE', 'Female'), ('OTHER', 'Other')], max_length=6)),
                ('subject', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='research.Subject')),
            ],
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('series_uid', models.CharField(max_length=64, unique=True, validators=[django.core.validators.RegexValidator('^\\d+(\\.\\d+)*$', code='invalid_uid', message='Digits and dots only!')])),
                ('number', models.IntegerField(verbose_name='Series Number')),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('description', models.CharField(max_length=64)),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='dicom.Patient')),
            ],
            options={
                'verbose_name_plural': 'Series',
            },
        ),
        migrations.CreateModel(
            name='SMBDirectory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=64)),
                ('user_id', models.CharField(max_length=64)),
                ('password', models.CharField(max_length=64)),
                ('share_name', models.CharField(max_length=64)),
                ('server_name', models.CharField(max_length=64)),
            ],
            options={
                'verbose_name_plural': 'SMB Directories',
            },
        ),
        migrations.CreateModel(
            name='SMBFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=500)),
                ('is_archived', models.BooleanField(default=False)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='file_set', to='dicom.SMBDirectory')),
            ],
            options={
                'verbose_name_plural': 'SMB Files',
            },
        ),
        migrations.CreateModel(
            name='Study',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('study_uid', models.CharField(max_length=64, unique=True, validators=[django.core.validators.RegexValidator('^\\d+(\\.\\d+)*$', code='invalid_uid', message='Digits and dots only!')])),
                ('description', models.CharField(max_length=64)),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Studies',
            },
        ),
        migrations.AddField(
            model_name='series',
            name='study',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='dicom.Study'),
        ),
        migrations.AddField(
            model_name='instance',
            name='patient',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='dicom.Patient'),
        ),
        migrations.AddField(
            model_name='instance',
            name='series',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='dicom.Series'),
        ),
        migrations.AddField(
            model_name='instance',
            name='study',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='dicom.Study'),
        ),
    ]
